openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /v0/office-group:
    put:
      tags:
      - office-group-controller
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfficeGroupUpdateResource"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OfficeGroupResponse"
    post:
      tags:
      - office-group-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfficeGroupResource"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OfficeGroupResponse"
    delete:
      tags:
      - office-group-controller
      operationId: delete
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /v0/office-group/{groupId}/office-unit:
    put:
      tags:
      - office-unit-controller
      operationId: update_1
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfficeUnitUpdateResource"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OfficeUnitResponse"
    post:
      tags:
      - office-unit-controller
      operationId: create_1
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OfficeUnitResource"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OfficeUnitResponse"
    delete:
      tags:
      - office-unit-controller
      operationId: delete_1
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /v0/clients:
    put:
      tags:
      - client-controller
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientUpdateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClientResponse"
    post:
      tags:
      - client-controller
      operationId: create_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientCreateRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClientResponse"
    delete:
      tags:
      - client-controller
      operationId: delete_2
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /v0/office-group/{groupId}/office-unit/search:
    post:
      tags:
      - office-unit-controller
      operationId: search
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PagedFilterOfficeUnitResource"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedResponseOfficeUnitResponse"
  /v0/office-group/search:
    post:
      tags:
      - office-group-controller
      operationId: search_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PagedFilterOfficeGroupResource"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedResponseOfficeGroupResponse"
  /v0/clients/search:
    post:
      tags:
      - client-controller
      operationId: search_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PagedFilterClientResource"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PagedResponseClientResponse"
  /v0/office-group/{id}:
    get:
      tags:
      - office-group-controller
      operationId: fetchById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OfficeGroupResponse"
  /v0/office-group/{groupId}/office-unit/{id}:
    get:
      tags:
      - office-unit-controller
      operationId: fetchById_1
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OfficeUnitResponse"
  /v0/clients/{id}:
    get:
      tags:
      - client-controller
      operationId: fetchById_2
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ClientResponse"
components:
  schemas:
    OfficeGroupResource:
      type: object
      properties:
        name:
          type: string
        displayName:
          type: string
        registrationNumber:
          type: string
    OfficeGroupUpdateResource:
      type: object
      properties:
        id:
          type: string
          format: uuid
        officeGroupData:
          $ref: "#/components/schemas/OfficeGroupResource"
    OfficeGroupResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        officeGroupData:
          $ref: "#/components/schemas/OfficeGroupResource"
    OfficeAddressResource:
      type: object
      properties:
        street:
          type: string
        complement:
          type: string
        number:
          type: string
        asOf:
          type: string
        country:
          type: string
          enum:
          - BRAZIL
        state:
          type: string
          enum:
          - AMAZONAS
          - ALAGOAS
          - ACRE
          - AMAPA
          - BAHIA
          - PARA
          - MATO_GROSSO
          - MINAS_GERAIS
          - MATO_GROSSO_DO_SUL
          - GOIAS
          - MARANHAO
          - RIO_GRANDE_DO_SUL
          - TOCANTINS
          - PIAUI
          - SAO_PAULO
          - RONDONIA
          - RORAIMA
          - PARANA
          - CEARA
          - PERNAMBUCO
          - SANTA_CATARINA
          - PARAIBA
          - RIO_GRANDE_DO_NORTE
          - ESPIRITO_SANTO
          - RIO_DE_JANEIRO
          - SERGIPE
          - DISTRITO_FEDERAL
        city:
          type: string
        addressType:
          type: string
          enum:
          - MAIL_BOX
          - RECEPTION
          - OFFICE_ADDRESS
        zipCode:
          type: string
    OfficeContactResource:
      type: object
      properties:
        type:
          type: string
          enum:
          - CELL_PHONE
          - COMMERCIAL_EMAIL
          - FINANCIAL_EMAIL
          - PEOPLE_MANAGEMENT_EMAIL
          - MARKETING_EMAIL
          - SAILS_EMAIL
          - COMMERCIAL_PHONE
          - FINANCIAL_PHONE
          - PEOPLE_MANAGEMENT_PHONE
          - MARKETING_PHONE
          - SAILS_PHONE
        value:
          type: string
    OfficeUnitResource:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        registrationNumber:
          type: string
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/OfficeContactResource"
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/OfficeAddressResource"
    OfficeUnitUpdateResource:
      type: object
      properties:
        id:
          type: string
          format: uuid
        officeUnitData:
          $ref: "#/components/schemas/OfficeUnitResource"
    OfficeUnitResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        officeUnitData:
          $ref: "#/components/schemas/OfficeUnitResource"
    AddressResource:
      type: object
      properties:
        street:
          type: string
        complement:
          type: string
        number:
          type: string
        asOf:
          type: string
        country:
          type: string
          enum:
          - BRAZIL
        state:
          type: string
          enum:
          - AMAZONAS
          - ALAGOAS
          - ACRE
          - AMAPA
          - BAHIA
          - PARA
          - MATO_GROSSO
          - MINAS_GERAIS
          - MATO_GROSSO_DO_SUL
          - GOIAS
          - MARANHAO
          - RIO_GRANDE_DO_SUL
          - TOCANTINS
          - PIAUI
          - SAO_PAULO
          - RONDONIA
          - RORAIMA
          - PARANA
          - CEARA
          - PERNAMBUCO
          - SANTA_CATARINA
          - PARAIBA
          - RIO_GRANDE_DO_NORTE
          - ESPIRITO_SANTO
          - RIO_DE_JANEIRO
          - SERGIPE
          - DISTRITO_FEDERAL
        city:
          type: string
        addressType:
          type: string
          enum:
          - HOME
          - WORK
          - OTHER
        zipCode:
          type: string
    ClientResource:
      type: object
      properties:
        description:
          type: string
        howDidYouHearAboutUs:
          type: string
        personalData:
          $ref: "#/components/schemas/PersonalDataResource"
    ClientUpdateRequest:
      type: object
      properties:
        id:
          type: string
          format: uuid
        client:
          $ref: "#/components/schemas/ClientResource"
        representatives:
          type: array
          items:
            $ref: "#/components/schemas/RepresentativeUpdateResource"
    ContactDataResource:
      type: object
      properties:
        type:
          type: string
          enum:
          - PERSONAL_CELL_PHONE
          - PERSONAL_EMAIL
          - PERSONAL_HOME_PHONE
          - WORK_CELL_PHONE
          - WORK_EMAIL
          - PROFESSIONAL_PHONE
        value:
          type: string
    PersonalDataResource:
      type: object
      properties:
        name:
          type: string
        namePart2:
          type: string
        displayName:
          type: string
        birthDate:
          type: string
          format: date
        personType:
          type: string
          enum:
          - NATURAL
          - LEGAL
        contacts:
          type: array
          items:
            $ref: "#/components/schemas/ContactDataResource"
        addresses:
          type: array
          items:
            $ref: "#/components/schemas/AddressResource"
        personalDocuments:
          type: array
          items:
            $ref: "#/components/schemas/PersonalDocumentResource"
    PersonalDocumentResource:
      type: object
      properties:
        type:
          type: string
          enum:
          - CPF
          - CNPJ
          - ID
          - PASSPORT
          - DRIVER_LICENSE
        value:
          type: string
        issuingDate:
          type: string
          format: date
        issuingAgency:
          type: string
    RepresentativeUpdateResource:
      type: object
      properties:
        id:
          type: string
          format: uuid
        representativeType:
          type: string
          enum:
          - PROXY
          - ATTOURNEY_IN_FACT
          - LEGAL_GUARDIAN
          - CURATOR
          - LEGAL_REPRESENTATIVE
          - ADMINISTRATOR
          - MANAGER
          - DIRECTOR
          - CEO
          - CFO
          - PRESIDENT
          - BOARD_MEMBER
        personalData:
          $ref: "#/components/schemas/PersonalDataResource"
    ClientResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        client:
          $ref: "#/components/schemas/ClientResource"
        representatives:
          type: array
          items:
            $ref: "#/components/schemas/RepresentativeResponse"
    RepresentativeResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        representativeType:
          type: string
          enum:
          - PROXY
          - ATTOURNEY_IN_FACT
          - LEGAL_GUARDIAN
          - CURATOR
          - LEGAL_REPRESENTATIVE
          - ADMINISTRATOR
          - MANAGER
          - DIRECTOR
          - CEO
          - CFO
          - PRESIDENT
          - BOARD_MEMBER
        personalData:
          $ref: "#/components/schemas/PersonalDataResource"
    PagedFilterOfficeUnitResource:
      type: object
      properties:
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        example:
          $ref: "#/components/schemas/OfficeUnitResource"
    PagedResponseOfficeUnitResponse:
      type: object
      properties:
        numberOfPages:
          type: integer
          format: int32
        currentPageIndex:
          type: integer
          format: int32
        count:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int32
    PagedFilterOfficeGroupResource:
      type: object
      properties:
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        example:
          $ref: "#/components/schemas/OfficeGroupResource"
    PagedResponseOfficeGroupResponse:
      type: object
      properties:
        numberOfPages:
          type: integer
          format: int32
        currentPageIndex:
          type: integer
          format: int32
        count:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int32
    ClientCreateRequest:
      type: object
      properties:
        client:
          $ref: "#/components/schemas/ClientResource"
        representatives:
          type: array
          items:
            $ref: "#/components/schemas/RepresentativeResource"
    RepresentativeResource:
      type: object
      properties:
        representativeType:
          type: string
          enum:
          - PROXY
          - ATTOURNEY_IN_FACT
          - LEGAL_GUARDIAN
          - CURATOR
          - LEGAL_REPRESENTATIVE
          - ADMINISTRATOR
          - MANAGER
          - DIRECTOR
          - CEO
          - CFO
          - PRESIDENT
          - BOARD_MEMBER
        personalData:
          $ref: "#/components/schemas/PersonalDataResource"
    PagedFilterClientResource:
      type: object
      properties:
        pageIndex:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        example:
          $ref: "#/components/schemas/ClientResource"
    PagedResponseClientResponse:
      type: object
      properties:
        numberOfPages:
          type: integer
          format: int32
        currentPageIndex:
          type: integer
          format: int32
        count:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int32
